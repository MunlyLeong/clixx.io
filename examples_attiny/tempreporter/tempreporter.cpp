/* Simple Timer

A simple example of using timers.

*/

#define F_CPU 8000000UL

#include <stdio.h>
#include "clixxIO.hpp"
#include "tempreporter-config.hpp"

#include "core_AVR/softuart.h"
#include "core_AVR/iohelp.h"

#include <avr/interrupt.h>
#include <util/delay.h>

#define TEMP_OFFSET 17

#define D1_I PB3
#define D1_O PB4
#define D1_S PB0

#define D2_I PB2
#define D2_O PB1
#define D2_S PB5

class App : public clixxIOApp{

  public:
  
    void timerevent(){

    };
    
    void setup(){
        
    };
    
};


// Main program Section. Simply setup an App class and let it run
int main(){
 
  // App m;

    Serial.begin();
	sei();
	
	Serial.puts("Hello - I am alive\n\r");

	adcInit(ADC4);

    DDRB |= (1<<D1_O);    	///PB5 /digital 13 is an output

	for (;;) {

		// Flashing LED
		PORTB |= (1<<D1_O);    		// Else turn pin on
		_delay_ms(200);    // Delay 2 millisecond
		PORTB &= ~(1<<D1_O);    		// Turn pin off
		_delay_ms(200);    // Delay 2 millisecond
		
		// Process Temperatures via ADC
		int temp = adcRead(ADC4,1,3);
		
		char str[25];
		snprintf(str, sizeof(str), "Temp=%d %d\n\r", temp,  temp - 273 + TEMP_OFFSET);
		Serial.puts(str);
		
	}

  //return m.run();

}

// Autogenerated interface between the event interface and application class
#include "tempreporter-callbacks.cpp"
